{
    "port": 8000,
    # python3 potato/potato/flask_server.py start src/annotation/ -p 8000

    "server_name": "potato annotator",

    "annotation_task_name": "Turn 3",

    # Potato will write the annotation file for all annotations to this
    # directory, as well as per-annotator output files and state information
    # necessary to restart annotation.
    "output_annotation_dir": "annotation_output/",

    # The output format for the all-annotator data. Allowed formats are:
    # * jsonl
    # * json (same output as jsonl)
    # * csv
    # * tsv
    #
    "output_annotation_format": "tsv",

    # If annotators are using a codebook, this will be linked at the top to the
    # instance for easy access
    "annotation_codebook_url": "",

    "data_files": [
       "data_files/for_human_3_annotation.csv"
    ],

    "item_properties": {
        "id_key": "id",
        "text_key": "text",
    },

  #list_as_text is used when the input text is actually a list of texts, usually used for best-worst-scaling
  #"list_as_text": {
  #    "text_list_prefix_type": 'None',
  #    "horizontal": True,
  #  },

    "user_config": {

      "allow_all_users": True,

      "users": [  ],
    },

    #defining the ways annotators entering the annotation system
    "login": {
       "type": 'password',    #can be 'password' or 'url_direct'
       #"url_argument": 'PROLIFIC_PID' # when the login type is set to 'url_direct', 'url_argument' must be setup for a direct url argument login
    },

    #the jumping-to-id function will be disabled if "jumping_to_id_disabled" is True
    "jumping_to_id_disabled": False,

  #the navigation bar will be hidden to the annotators if "hide_navbar" is True
    "hide_navbar": True,


    "automatic_assignment": {
      #whether do automatic task assignment for annotators, default False.
      "on": True,
      "output_filename": 'task_assignment.json',
      "sampling_strategy": 'random',
      "labels_per_instance": 1,
      "instance_per_annotator": 50,
      "test_question_per_annotator": 0, # you must set up the test question in surveyflow to use this function
      "allow_user_adjust_quota": True,

      "users": [  ],
    },


    # How many seconds do you want the annotators spend on each instance, after
    # that, an alert will be sent per alert_time_each_instance seconds.
    "alert_time_each_instance": 10000000,
    "horizontal_key_bindings": true,

    "annotation_schemes": [
        {
            "annotation_type": "radio",
            "name": "HasResponse",
            "description": "Will you respond?",
            "labels": [
                {"name": "[1] Yes", "key_value": "1"},
                {"name": "[2] No", "key_value": "2"},
                {"name": "[3] Non-English Content (can't answer)", "key_value": "3"},
                {"name": "[4] Uncomfortable Answering (NSFW, persona you don't want to adopt, etc.)", "key_value": "4"},
            ],

            # adding requirements for labels, when "required" is True, the annotators will be asked to finish the current instance to proceed
            "label_requirement": {"required":True},

            # If true, numbers [1-len(labels)] will be bound to each
            # label. Aannotations with more than 10 are not supported with this
            # simple keybinding and will need to use the full item specification
            # to bind all labels to keys.
            #"sequential_key_binding": True,
        },
        {
            "annotation_type": "text",
            "name": "ResponseText",
            "description": "If yes, write the person's next response.",
            
            # adding requirements for labels, when "required" is True, the annotators will be asked to finish the current instance to proceed
            "label_requirement": {"required":False},
            "textarea": {"on":True, "rows":8, "cols":90}
            
            # If true, numbers [1-len(labels)] will be bound to each
            # label. Aannotations with more than 10 are not supported with this
            # simple keybinding and will need to use the full item specification
            # to bind all labels to keys.
            #"sequential_key_binding": True,
        },
    ],

    # The html that changes the visualiztation for your task. Change this file
    # to influence the layout and description of your task. This is not a full
    # HTML page, just the piece that does lays out your task's pieces
    #"html_layout": "templates/examples/fixed_keybinding_layout.html",
    "html_layout": "default",

    # The core UI files for Potato. You should not need to change these normally.
    #
    # Exceptions to this might include:
    # 1) You want to add custom CSS/fonts to style your task
    # 2) Your layout requires additional JS/assets to render
    # 3) You want to support additional keybinding magic
    #
    # if you want to use your own template,
    # please replace the string as a path to the template
    "base_html_template": "default",
    "header_file": "templates/header.html",

    # This is where the actual HTML files will be generated
    "site_dir": "default"

}
